<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.carljmosca.skedge</groupId>
    <artifactId>skedge</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>skedge</name>
    <description>Demo project for Spring Boot</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.4.1.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <vaadin.version>7.7.3</vaadin.version>
        <vaadin.plugin.version>${vaadin.version}</vaadin.plugin.version>
        <vaadin.theme>valo</vaadin.theme>
        <vaadin.spring.addons>0.0.8-SNAPSHOT</vaadin.spring.addons>
        <docker.image.prefix>carljmosca</docker.image.prefix>
    </properties>
    
    
    <repositories>
        <repository>
            <id>vaadin-addons</id>
            <url>http://maven.vaadin.com/vaadin-addons</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-spring-boot-starter</artifactId>
            <version>1.0.2</version>
        </dependency>

        <dependency>
            <groupId>org.vaadin.spring.addons</groupId>
            <artifactId>vaadin-spring-addon-sidebar</artifactId>
            <version>${vaadin.spring.addons}</version>
        </dependency>
        <dependency>
            <groupId>org.vaadin.spring.addons</groupId>
            <artifactId>vaadin-spring-addon-i18n</artifactId>
            <version>${vaadin.spring.addons}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-bom</artifactId>
                <version>${vaadin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <!--                        <version>1.3.0.M2</version>
                        <configuration>
                            <executable>true</executable>
                        </configuration>-->
                        <executions>
                            <execution>
                                <goals>
                                    <goal>repackage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.vaadin</groupId>
                        <artifactId>vaadin-maven-plugin</artifactId>
                        <version>${vaadin.plugin.version}</version>
                        <configuration>
                            <extraJvmArgs>-Xmx1g -Xss1024k</extraJvmArgs>

                            <!-- We are doing "inplace" gwt compilation
                            but into subdir VAADIN/widgetsets -->
                            <webappDirectory>src/main/resources/VAADIN/widgetsets
                            </webappDirectory>
                            <hostedWebapp>src/main/resources/VAADIN/widgetsets
                            </hostedWebapp>
                            <noServer>true</noServer>
                            <!-- Remove draftCompile when project is ready -->
                            <draftCompile>true</draftCompile>
                            <persistentunitcachedir>${project.build.directory}/gwtdirt</persistentunitcachedir>
                            <compileReport>false</compileReport>
                            <style>OBF</style>
                            <strict>true</strict>
                            <!-- Symbol maps etc, not needed in vaadin app, just target them outside war -->
                            <deploy>${project.build.directory}/gwt-deploy</deploy>
                        </configuration>
                    </plugin> 
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <!-- ensure fresly compiled widgetset to jar, TODO check
                            vaadin plugin configuration could get rid of this -->
                            <execution>
                                <id>copy-resources</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target/classes/VAADIN</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${basedir}/src/main/resources/VAADIN</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>     
            </build>
        </profile>
        <profile>
            <id>theme-widgetset</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <!--                        <version>1.3.0.M2</version>
                        <configuration>
                            <executable>true</executable>
                        </configuration>-->
                        <executions>
                            <execution>
                                <goals>
                                    <goal>repackage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.vaadin</groupId>
                        <artifactId>vaadin-maven-plugin</artifactId>
                        <version>${vaadin.plugin.version}</version>
                        <configuration>
                            <extraJvmArgs>-Xmx1g -Xss1024k</extraJvmArgs>

                            <!-- We are doing "inplace" gwt compilation
                            but into subdir VAADIN/widgetsets -->
                            <webappDirectory>src/main/resources/VAADIN/widgetsets
                            </webappDirectory>
                            <hostedWebapp>src/main/resources/VAADIN/widgetsets
                            </hostedWebapp>
                            <noServer>true</noServer>
                            <!-- Remove draftCompile when project is ready -->
                            <draftCompile>true</draftCompile>
                            <persistentunitcachedir>${project.build.directory}/gwtdirt</persistentunitcachedir>
                            <compileReport>false</compileReport>
                            <style>OBF</style>
                            <strict>true</strict>
                            <!-- Symbol maps etc, not needed in vaadin app, just target them outside war -->
                            <deploy>${project.build.directory}/gwt-deploy</deploy>
                        </configuration>
                        <executions>
                            <execution>
                                <configuration>
                                    <!-- if you don't specify any modules, the plugin will find them -->
                                    <!-- <modules> <module>com.vaadin.demo.mobilemail.gwt.ColorPickerWidgetSet</module>
                                    </modules> -->
                                </configuration>
                                <goals>
                                    <goal>clean</goal>
                                    <goal>resources</goal>
                                    <!-- These are non functional currently with spring boot directory structure
                                   <goal>update-theme</goal>
                                   <goal>compile-theme</goal>
                                    -->
                                    <goal>update-widgetset</goal>
                                    <goal>compile</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin> 
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <!-- ensure fresly compiled widgetset to jar, TODO check
                            vaadin plugin configuration could get rid of this -->
                            <execution>
                                <id>copy-resources</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target/classes/VAADIN</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${basedir}/src/main/resources/VAADIN</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>     
            </build>
        </profile>        
        <profile>
            <id>deploy</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>repackage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.vaadin</groupId>
                        <artifactId>vaadin-maven-plugin</artifactId>
                        <version>${vaadin.plugin.version}</version>
                        <configuration>
                            <extraJvmArgs>-Xmx1g -Xss1024k</extraJvmArgs>

                            <!-- We are doing "inplace" gwt compilation
                            but into subdir VAADIN/widgetsets -->
                            <webappDirectory>src/main/resources/VAADIN/widgetsets
                            </webappDirectory>
                            <hostedWebapp>src/main/resources/VAADIN/widgetsets
                            </hostedWebapp>
                            <noServer>true</noServer>
                            <!-- Remove draftCompile when project is ready -->
                            <draftCompile>true</draftCompile>
                            <persistentunitcachedir>${project.build.directory}/gwtdirt</persistentunitcachedir>
                            <compileReport>false</compileReport>
                            <style>OBF</style>
                            <strict>true</strict>
                            <!-- Symbol maps etc, not needed in vaadin app, just target them outside war -->
                            <deploy>${project.build.directory}/gwt-deploy</deploy>
                        </configuration>
                        <executions>
                            <execution>
                                <configuration>
                                    <!-- if you don't specify any modules, the plugin will find them -->
                                    <!-- <modules> <module>com.vaadin.demo.mobilemail.gwt.ColorPickerWidgetSet</module>
                                    </modules> -->
                                </configuration>
                                <goals>
                                    <goal>clean</goal>
                                    <goal>resources</goal>
                                    <!-- These are non functional currently with spring boot directory structure
                                   <goal>update-theme</goal>
                                   <goal>compile-theme</goal>
                                    -->
                                    <goal>update-widgetset</goal>
                                    <goal>compile</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin> 
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <!-- ensure fresly compiled widgetset to jar, TODO check
                            vaadin plugin configuration could get rid of this -->
                            <execution>
                                <id>copy-resources</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target/classes/VAADIN</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${basedir}/src/main/resources/VAADIN</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.4.13</version>
                        <configuration>
                            <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                            <dockerDirectory>src/main/docker</dockerDirectory>
                            <resources>
                                <resource>
                                    <targetPath>/</targetPath>
                                    <directory>${project.build.directory}</directory>
                                    <include>${project.build.finalName}.jar</include>
                                </resource>
                            </resources>
                        </configuration>
                    </plugin>
                </plugins>
     
            </build>
        </profile>
    </profiles>

</project>
